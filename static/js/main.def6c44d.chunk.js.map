{"version":3,"sources":["Components/Constants.js","Components/Outcome.js","App.js","reportWebVitals.js","index.js"],"names":["DICE_MATRIX","DICE_NAMES","RESULT_NAMES","OutcomeTally","arr","i","v","arr1","slice","arr2","console","log","map","x","Grid","container","direction","item","xs","sm","Math","abs","App","useState","rollAmount","setRollAmount","result","setResult","handleChange","event","die","target","id","newAmount","value","increment","splice","spacing","alignItems","direciton","className","indexOf","onClick","results","l","roll","floor","random","length","total","justifyContent","OutComeTally","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.def6c44d.chunk.js","sourcesContent":["export const DICE_MATRIX = [\r\n  [12, 12, 0, 6, 7, 1], //Boost die (d6)\r\n  [12, 12, 3, 3, 4, 4], //Setback die (d6)\r\n  [12, 0, 0, 8, 1, 1, 6, 7], //Ability die (d8)\r\n  [12, 3, 9, 4, 4, 4, 10, 11], //Difficulty die (d8)\r\n  [12, 0, 0, 8, 8, 1, 6, 6, 6, 7, 7, 2], //Proficiency die (d12)\r\n  [12, 3, 3, 9, 9, 4, 4, 11, 11, 10, 10, 5] //Challenge die (d12)\r\n];\r\nexport const DICE_NAMES = [\r\n  \"Boost\",\r\n  \"Setback\",\r\n  \"Ability\",\r\n  \"Difficulty\",\r\n  \"Proficiency\",\r\n  \"Challenge\"\r\n];\r\n\r\nexport const RESULT_NAMES = [\r\n  \"Success\",\r\n  \"Advantage\",\r\n  \"Triumph\",\r\n  \"Failure\",\r\n  \"Threat\",\r\n  \"Despair\"\r\n];\r\n\r\nexport default { DICE_MATRIX, DICE_NAMES, RESULT_NAMES };\r\n","import { RESULT_NAMES } from \"./Constants.js\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport const OutcomeTally = arr => {\r\n  let i = -1;\r\n  let v = -1;\r\n  let arr1 = arr.slice(0, 3);\r\n  let arr2 = arr.slice(3);\r\n  console.log(arr);\r\n  let tally = arr1.map(x => {\r\n    i++;\r\n    return x - arr2[i];\r\n  });\r\n  let display = tally.map(x => {\r\n    if (x >= 0) {\r\n      v++;\r\n      return (\r\n        <Grid container direction=\"column\" item xs={4} sm={3}>\r\n          <Grid item>\r\n            <h2>{RESULT_NAMES[v]}</h2>\r\n          </Grid>\r\n          <Grid item>\r\n            <h2>{x}</h2>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    } else if (x < 0) {\r\n      v++;\r\n      return (\r\n        <Grid container direction=\"column\" item xs={4} sm={3}>\r\n          <Grid item>\r\n            <h2>{RESULT_NAMES[v + 3]}</h2>\r\n          </Grid>{\" \"}\r\n          <Grid item>\r\n            <h2>{Math.abs(x)}</h2>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    } else {\r\n      return (\r\n        <Grid container direction=\"column\" item xs={4} sm={3}>\r\n          <Grid item>{\"\"}</Grid>\r\n          <Grid item>{\"\"}</Grid>\r\n        </Grid>\r\n      );\r\n    }\r\n  });\r\n  return display;\r\n};\r\n\r\nexport default OutcomeTally;\r\n","import { React, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  DICE_MATRIX,\n  DICE_NAMES,\n  RESULT_NAMES\n} from \"./Components/Constants.js\";\nimport OutComeTally from \"./Components/Outcome.js\";\n\nexport const App = () => {\n  const [rollAmount, setRollAmount] = useState([0, 0, 0, 0, 0, 0]);\n  const [result, setResult] = useState();\n\n  const handleChange = event => {\n    let die = event.target.id;\n    let newAmount = [...rollAmount];\n    if (event.target.value == 1 && newAmount[die] < 5) {\n      let increment = newAmount[die] + 1;\n      newAmount.splice(die, 1, increment);\n      setRollAmount(newAmount);\n    } else if (event.target.value == -1 && newAmount[die] > 0) {\n      newAmount.splice(die, 1, newAmount[die] - 1);\n      setRollAmount(newAmount);\n    }\n  };\n\n  const handleRoll = event => {\n    let i = 0;\n    let results = [0, 0, 0, 0, 0, 0];\n    rollAmount.map(x => {\n      if (x > 0) {\n        for (let l = 0; l < x; l++) {\n          let roll =\n            DICE_MATRIX[i][Math.floor(Math.random() * DICE_MATRIX[i].length)];\n          let total = results[roll] + 1;\n          if (roll == 12) {\n          } else if (roll == 6) {\n            results.splice(0, 1, results[0] + 1);\n            results.splice(1, 1, results[1] + 1);\n          } else if (roll == 7) {\n            results.splice(1, 1, results[1] + 2);\n          } else if (roll == 8) {\n            results.splice(0, 1, results[0] + 2);\n          } else if (roll == 9) {\n            results.splice(3, 1, results[3] + 2);\n          } else if (roll == 10) {\n            results.splice(4, 1, results[4] + 2);\n          } else if (roll == 11) {\n            results.splice(4, 1, results[4] + 1);\n            results.splice(5, 1, results[5] + 1);\n          } else {\n            results.splice(roll, 1, total);\n          }\n        }\n        i++;\n      } else {\n        i++;\n        return 0;\n      }\n    });\n    setResult(results);\n    return setResult(results);\n  };\n\n  return (\n    <Grid container direction=\"row\" spacing={12} alignItems=\"center\">\n      <Grid item direciton=\"column\" xs={6} sm={3}>\n        {DICE_MATRIX.map(x => {\n          return (\n            <Grid item>\n              <h2 className={DICE_NAMES[DICE_MATRIX.indexOf(x)]}>\n                {DICE_NAMES[DICE_MATRIX.indexOf(x)]}\n              </h2>\n              <button\n                value={-1}\n                id={DICE_MATRIX.indexOf(x)}\n                onClick={handleChange}\n              >\n                -\n              </button>\n              {rollAmount[DICE_MATRIX.indexOf(x)]}\n              <button\n                value={1}\n                id={DICE_MATRIX.indexOf(x)}\n                onClick={handleChange}\n              >\n                +\n              </button>\n            </Grid>\n          );\n        })}\n        <button onClick={handleRoll}>Roll</button>\n      </Grid>\n      <Grid\n        container\n        item\n        direction=\"row\"\n        justifyContent=\"flex-end\"\n        item\n        xs={6}\n        sm={9}\n      >\n        {result ? OutComeTally(result) : \"\"}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}