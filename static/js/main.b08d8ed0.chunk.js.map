{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DiceTypes","id","diceCode","sides","DiceImage","roll","DiceButton","props","increment","bind","decrement","this","rollMore","rollLess","className","rollAmount","onClick","React","Component","App","diceRoll","numberOfDice","rolls","rollSum","successTotal","advantageTotal","triumphTotal","failureTotal","threatTotal","despairTotal","i","state","abilityTotal","Math","floor","random","console","log","proficiencyTotal","boostTotal","difficultyTotal","challengeTotal","setbackTotal","setState","successOrFailResult","advantageOrThreatResult","triumphResult","despairResult","successOrFail","advantageOrThreat","diceBank","map","diceObj","diceBankArr","amount","index","calculateOutcome","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.b08d8ed0.chunk.js","sourcesContent":["import './App.css';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\nconst DiceTypes = [\n  {\n      id: 'Ability',\n      diceCode: 1,\n      sides: 8,\n  },\n  {\n    id: 'Proficiency',\n    diceCode: 2,\n    sides: 12,\n  },\n  {\n    id: 'Boost',\n    diceCode: 3,\n    sides: 6,\n  },\n  {\n    id: 'Difficulty',\n    diceCode: 4,\n    sides: 8,\n  },\n  {\n    id: 'Challenge',\n    diceCode: 5,\n    sides: 12,\n  },\n  {\n    id: 'Setback',\n    diceCode: 6,\n    sides: 6,\n  }\n]\nconst DiceImage = ({ roll }) => {\n  return null;\n}\n\nclass DiceButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n  }\n\n  increment() {\n    this.props.rollMore(this.props.diceCode);\n  }\n\n  decrement() {\n    this.props.rollLess(this.props.diceCode);\n  }\n\n\n  render () {\n    return(\n      <div>\n        <h2><span className={this.props.id}>{this.props.id}</span>: {this.props.rollAmount}</h2>\n        <button onClick = {this.decrement}>-</button>\n        <button onClick = {this.increment}>+</button>\n      </div>\n    )\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        numberOfDice: 0,\n        rolls: [],\n        rollSum: null,\n        abilityTotal: 0,\n        proficiencyTotal: 0,\n        boostTotal: 0,\n        difficultyTotal: 0,\n        challengeTotal: 0,\n        setbackTotal: 0,\n        successTotal: 0,\n        advantageTotal: 0,\n        triumphTotal: 0,\n        failureTotal: 0,\n        threatTotal: 0,\n        despairTotal: 0,\n        rollAmount: 0\n    };\n    this.rollMore = this.rollMore.bind(this);\n    this.rollLess = this.rollLess.bind(this);\n  }\n  diceRoll = numberOfDice => {\n    let rolls = [];\n    let rollSum = 0;\n    let successTotal = 0;\n    let advantageTotal = 0;\n    let triumphTotal = 0;\n    let failureTotal = 0;\n    let threatTotal = 0;\n    let despairTotal = 0;\n\n    //roll Ability die\n    for (let i = 0; i < this.state.abilityTotal; i++) {\n      rolls[i] = Math.floor(Math.random() * 8) + 1;\n      rollSum += rolls[i];\n      console.log(rolls[i]);\n      if (rolls[i] === 2 || rolls[i] === 3) {\n        successTotal += 1;\n      } else if (rolls[i] === 4) {\n        successTotal += 2;\n      } else if (rolls[i] === 5 || rolls[i] === 6) {\n        advantageTotal += 1;\n      } else if (rolls[i] === 7) {\n        successTotal += 1;\n        advantageTotal += 1;\n      } else if (rolls[i] === 8) {\n        advantageTotal += 2;\n      }\n    }\n\n    //roll Proficiency die\n    for (let i = 0; i < this.state.proficiencyTotal; i++) {\n      rolls[i] = Math.floor(Math.random() * 12) + 1;\n      rollSum += rolls[i];\n      console.log(rolls[i]);\n      if (rolls[i] === 2 || rolls[i] === 3) {\n        successTotal += 1;\n      } else if (rolls[i] === 4 || rolls[i] === 5) {\n        successTotal += 2;\n      } else if (rolls[i] === 6) {\n        advantageTotal += 1;\n      } else if (rolls[i] === 7 || rolls[i] === 8 || rolls[i] === 9) {\n        successTotal += 1;\n        advantageTotal += 1;\n      } else if (rolls[i] === 10 || rolls[i] === 11) {\n        advantageTotal += 2;\n      } else if (rolls[i] === 12) {\n        triumphTotal += 1;\n      }\n    }\n\n    //roll Boost die\n    for (let i = 0; i < this.state.boostTotal; i++) {\n      rolls[i] = Math.floor(Math.random() * 6) + 1;\n      rollSum += rolls[i];\n      console.log(rolls[i]);\n      if (rolls[i] === 3) {\n        successTotal += 1;\n      } else if (rolls[i] === 4) {\n        successTotal += 1;\n        advantageTotal += 1;\n      } else if (rolls[i] === 5) {\n        advantageTotal += 2;\n      } else if (rolls[i] === 6) {\n        advantageTotal += 1;\n      }\n    }\n\n    //roll Difficult dice\n    for (let i = 0; i < this.state.difficultyTotal; i++) {\n      rolls[i] = Math.floor(Math.random() * 8) + 1;\n      rollSum += rolls[i];\n      console.log(rolls[i]);\n      if (rolls[i] === 2) {\n        failureTotal += 1;\n      } else if (rolls[i] === 3) {\n        failureTotal += 2;\n      } else if (rolls[i] === 4 || rolls[i] === 5 || rolls[i] === 6) {\n        threatTotal += 1;\n      } else if (rolls[i] === 7) {\n        threatTotal += 2;\n      } else if (rolls[i] === 8) {\n        failureTotal += 1;\n        threatTotal += 1;\n      }\n    }\n\n    //roll Challenge die\n    for (let i = 0; i < this.state.challengeTotal; i++) {\n      rolls[i] = Math.floor(Math.random() * 12) + 1;\n      rollSum += rolls[i];\n      console.log(rolls[i]);\n      if (rolls[i] === 2 || rolls[i] === 3) {\n        failureTotal += 1;\n      } else if (rolls[i] === 4 || rolls[i] === 5) {\n        failureTotal += 2;\n      } else if (rolls[i] === 6 || rolls[i] === 7) {\n        threatTotal += 1;\n      } else if (rolls[i] === 8 || rolls[i] === 9) {\n        failureTotal += 1;\n        threatTotal += 1;\n      } else if (rolls[i] === 10 || rolls[i] === 11) {\n        threatTotal += 2;\n      } else if (rolls[i] === 12) {\n        despairTotal += 1;\n      }\n    }\n\n    //roll Setbcak die\n    for (let i = 0; i < this.state.setbackTotal; i++) {\n      rolls[i] = Math.floor(Math.random() * 6) + 1;\n      rollSum += rolls[i];\n      console.log(rolls[i]);\n      if (rolls[i] === 3 || rolls[i] === 4) {\n        failureTotal += 1;\n      } else if (rolls[i] === 5 || rolls[i] === 6) {\n        threatTotal += 1;\n      }\n    }\n\n    this.setState({\n      numberOfDice: 1,\n      rolls,\n      rollSum,\n      successTotal,\n      advantageTotal,\n      triumphTotal,\n      failureTotal,\n      threatTotal,\n      despairTotal\n    });\n  }\n\n  rollMore(diceCode) {\n    let rollAmount;\n    if (diceCode === 1) {\n      rollAmount = this.state.abilityTotal;\n    } else if (diceCode === 2) {\n      rollAmount = this.state.proficiencyTotal;\n    } else if (diceCode === 3) {\n      rollAmount = this.state.boostTotal;\n    } else if (diceCode === 4) {\n      rollAmount = this.state.difficultyTotal;\n    } else if (diceCode === 5) {\n      rollAmount = this.state.challengeTotal;\n    } else if (diceCode === 6) {\n      rollAmount = this.state.setbackTotal;\n    }\n    if (rollAmount < 5) {\n      rollAmount += 1;\n      if (diceCode === 1) {\n        this.setState({\n          abilityTotal: rollAmount\n        });\n      } else if (diceCode === 2) {\n        this.setState({\n          proficiencyTotal: rollAmount\n        })\n      } else if (diceCode === 3) {\n        this.setState({\n          boostTotal: rollAmount\n        });\n      } else if (diceCode === 4) {\n        this.setState({\n          difficultyTotal: rollAmount\n        });\n      } else if (diceCode === 5) {\n        this.setState({\n          challengeTotal: rollAmount\n        });\n      } else if (diceCode === 6) {\n        this.setState({\n          setbackTotal: rollAmount\n        });\n      }\n    }\n  }\n\n  rollLess(diceCode) {\n    let rollAmount;\n    if (diceCode === 1) {\n      rollAmount = this.state.abilityTotal;\n    } else if (diceCode === 2) {\n      rollAmount = this.state.proficiencyTotal;\n    } else if (diceCode === 3) {\n      rollAmount = this.state.boostTotal;\n    } else if (diceCode === 4) {\n      rollAmount = this.state.difficultyTotal;\n    } else if (diceCode === 5) {\n      rollAmount = this.state.challengeTotal;\n    } else if (diceCode === 6) {\n      rollAmount = this.state.setbackTotal;\n    }\n    if (rollAmount > 0) {\n      rollAmount -= 1;\n      if (diceCode === 1) {\n        this.setState({\n          abilityTotal: rollAmount\n        });\n      } else if (diceCode === 2) {\n        this.setState({\n          proficiencyTotal: rollAmount\n        });\n      } else if (diceCode === 3) {\n        this.setState({\n          boostTotal: rollAmount\n        });\n      } else if (diceCode === 4) {\n        this.setState({\n          difficultyTotal: rollAmount\n        });\n      } else if (diceCode === 5) {\n        this.setState({\n          challengeTotal: rollAmount\n        });\n      } else if (diceCode === 6) {\n        this.setState({\n          setbackTotal: rollAmount\n        });\n      }\n    }\n  }\n  calculateOutcome() {\n    let successOrFail = this.state.successTotal - this.state.failureTotal;\n    let advantageOrThreat = this.state.advantageTotal - this.state.threatTotal;\n    let successOrFailResult;\n    let advantageOrThreatResult;\n    let triumphResult;\n    let despairResult;\n    if (successOrFail < 0) {\n      successOrFail *= -1;\n      if (successOrFail > 1) {\n        successOrFailResult = successOrFail + \" Failures\";\n      } else {\n        successOrFailResult = successOrFail + \" Failure\";\n      }\n    } else if (successOrFail === 0) {\n      successOrFail = null;\n    } else if (successOrFail > 0) {\n      if (successOrFail > 1) {\n        successOrFailResult = successOrFail + \" Successes\";\n      } else {\n        successOrFailResult = successOrFail + \" Success\";\n      }\n    }\n    if (advantageOrThreat < 0) {\n      advantageOrThreat *= -1;\n      if (advantageOrThreat > 1) {\n        advantageOrThreatResult = advantageOrThreat + \" Threats\";\n      } else {\n        advantageOrThreatResult = advantageOrThreat + \" Threat\";\n      }\n    } else if (advantageOrThreat === 0) {\n      advantageOrThreat = null;\n    } else if (advantageOrThreat > 0) {\n      if (advantageOrThreat > 1) {\n        advantageOrThreatResult = advantageOrThreat + \" Advantages\";\n      } else {\n        advantageOrThreatResult = advantageOrThreat + \" Advantage\";\n      }\n    }\n    if (this.state.triumphTotal > 0) {\n      triumphResult = this.state.triumphTotal + \" Triumphs\";\n    }\n    if (this.state.despairTotal > 0) {\n      despairResult = this.state.despairTotal + \" Despairs\";\n    }\n    return (<p>{successOrFailResult} {advantageOrThreatResult} {triumphResult} {despairResult}</p>);\n  }\n  render() {\n    let diceBank;\n    diceBank = DiceTypes.map((diceObj, i, diceBankArr) => {\n      let text = diceBankArr[i].id;\n      let diceCode = diceBankArr[i].diceCode;\n      let rollAmount;\n      if (diceCode === 1) {\n        rollAmount = this.state.abilityTotal;\n      } else if (diceCode === 2) {\n        rollAmount = this.state.proficiencyTotal;\n      } else if (diceCode === 3) {\n        rollAmount = this.state.boostTotal;\n      } else if (diceCode === 4) {\n        rollAmount = this.state.difficultyTotal;\n      } else if (diceCode === 5) {\n        rollAmount = this.state.challengeTotal;\n      } else if (diceCode === 6) {\n        rollAmount = this.state.setbackTotal;\n      }\n      return(\n        <DiceButton\n          id={diceBankArr[i].id}\n          diceCode={diceBankArr[i].diceCode}\n          sides={diceBankArr[i].sides}\n          amount={this.state.numberOfDice}\n          rollMore={this.rollMore}\n          rollLess={this.rollLess}\n          rollAmount={rollAmount}\n        />\n      );\n    })\n    return(\n      <div className=\"app\">\n        <div className='buttons'>\n          {diceBank}\n        </div>\n        <div>\n          <button className=\"rollButton\" onClick= { () => this.diceRoll() }>Roll Dice</button>\n        </div>\n        <div className=\"results\">\n          {\n            this.state.rolls.map((roll, index) => <DiceImage roll={roll} key={index} />)\n          }\n          {\n            this.state.numberOfDice ? (\n              <div>\n                <div>\n                  <h2>Overall Results:</h2>\n                  <div className='rollTotal'>\n                    <div>\n                      Successes: <span className='successes'>{this.state.successTotal} </span>\n                      Advantages: <span className='advantages'>{this.state.advantageTotal} </span>\n                      Triumphs: <span className='triumphs'>{this.state.triumphTotal}</span>\n                    </div>\n                    <div>\n                      Failures: <span className='failures'>{this.state.failureTotal} </span>\n                      Threat: <span className='threats'>{this.state.threatTotal} </span>\n                      Despairs: <span className='despairs'>{this.state.despairTotal}</span>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <h2>Outcome:</h2>\n                  <div>\n                    {this.calculateOutcome()}\n                  </div>\n                </div>\n              </div>\n            ) : null\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}