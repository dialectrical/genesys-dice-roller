{"version":3,"sources":["Components/Constants.js","Components/Outcome.js","Components/AmountSetter.js","Components/ResultSetter.js","App.js","reportWebVitals.js","index.js"],"names":["DICE_MATRIX","DICE_NAMES","RESULT_NAMES","OutcomeTally","arr","i","v","arr1","slice","arr2","map","x","Card","raised","CardContent","Typography","color","align","Math","abs","Grid","container","direction","item","xs","sm","AmountSetter","id","value","amount","func","die","newAmount","increment","splice","ResultSetter","results","l","roll","floor","random","length","total","useStyles","makeStyles","root","margin","padding","App","useState","rollAmount","setRollAmount","result","setResult","classes","handleChange","event","currentTarget","CssBaseline","Paper","elevation","spacing","alignItems","justifyContent","direciton","variant","className","indexOf","ButtonGroup","size","Button","onClick","disabled","lg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef2cc300.chunk.js","sourcesContent":["export const DICE_MATRIX = [\r\n  [12, 12, 0, 6, 7, 1], //Boost die (d6)\r\n  [12, 12, 3, 3, 4, 4], //Setback die (d6)\r\n  [12, 0, 0, 8, 1, 1, 6, 7], //Ability die (d8)\r\n  [12, 3, 9, 4, 4, 4, 10, 11], //Difficulty die (d8)\r\n  [12, 0, 0, 8, 8, 1, 6, 6, 6, 7, 7, 2], //Proficiency die (d12)\r\n  [12, 3, 3, 9, 9, 4, 4, 11, 11, 10, 10, 5] //Challenge die (d12)\r\n];\r\nexport const DICE_NAMES = [\r\n  \"Boost\",\r\n  \"Setback\",\r\n  \"Ability\",\r\n  \"Difficulty\",\r\n  \"Proficiency\",\r\n  \"Challenge\"\r\n];\r\n\r\nexport const RESULT_NAMES = [\r\n  \"Success\",\r\n  \"Advantage\",\r\n  \"Triumph\",\r\n  \"Failure\",\r\n  \"Threat\",\r\n  \"Despair\"\r\n];\r\n\r\nexport default { DICE_MATRIX, DICE_NAMES, RESULT_NAMES };\r\n","import { RESULT_NAMES } from \"./Constants.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const OutcomeTally = arr => {\r\n  let i = -1;\r\n  let v = -1;\r\n  let arr1 = arr.slice(0, 3);\r\n  let arr2 = arr.slice(3);\r\n  let tally = arr1.map(x => {\r\n    i++;\r\n    return x - arr2[i];\r\n  });\r\n  let display = tally.map(x => {\r\n    if (x >= 0) {\r\n      v++;\r\n      return (\r\n        <Card raised>\r\n          <CardContent>\r\n            <Typography color=\"textPrimary\">{RESULT_NAMES[v]}</Typography>\r\n            <Typography align=\"center\">{x}</Typography>\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    } else if (x < 0) {\r\n      v++;\r\n      return (\r\n        <Card raised>\r\n          <CardContent>\r\n            <Typography color=\"textPrimary\">{RESULT_NAMES[v + 3]}</Typography>\r\n            <Typography align=\"center\">{Math.abs(x)}</Typography>\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    } else {\r\n      return (\r\n        <Grid container direction=\"column\" item xs={4} sm={3}>\r\n          <Grid item>{\"\"}</Grid>\r\n          <Grid item>{\"\"}</Grid>\r\n        </Grid>\r\n      );\r\n    }\r\n  });\r\n  return display;\r\n};\r\n\r\nexport default OutcomeTally;\r\n","export const AmountSetter = (id, value, amount, func) => {\r\n  let die = id;\r\n  let newAmount = [...amount];\r\n  if (value == 1 && newAmount[die] < 5) {\r\n    let increment = newAmount[die] + 1;\r\n    newAmount.splice(die, 1, increment);\r\n    func(newAmount);\r\n  } else if (value == -1 && newAmount[die] > 0) {\r\n    newAmount.splice(die, 1, newAmount[die] - 1);\r\n    func(newAmount);\r\n  }\r\n};\r\n\r\nexport default AmountSetter;\r\n","import { DICE_MATRIX } from \"./Constants.js\";\r\n\r\nexport const ResultSetter = (amount, func) => {\r\n  let i = 0;\r\n  let results = [0, 0, 0, 0, 0, 0];\r\n  amount.map(x => {\r\n    if (x > 0) {\r\n      for (let l = 0; l < x; l++) {\r\n        let roll =\r\n          DICE_MATRIX[i][Math.floor(Math.random() * DICE_MATRIX[i].length)];\r\n        let total = results[roll] + 1;\r\n        if (roll == 12) {\r\n        } else if (roll == 6) {\r\n          results.splice(0, 1, results[0] + 1);\r\n          results.splice(1, 1, results[1] + 1);\r\n        } else if (roll == 7) {\r\n          results.splice(1, 1, results[1] + 2);\r\n        } else if (roll == 8) {\r\n          results.splice(0, 1, results[0] + 2);\r\n        } else if (roll == 9) {\r\n          results.splice(3, 1, results[3] + 2);\r\n        } else if (roll == 10) {\r\n          results.splice(4, 1, results[4] + 2);\r\n        } else if (roll == 11) {\r\n          results.splice(4, 1, results[4] + 1);\r\n          results.splice(5, 1, results[5] + 1);\r\n        } else {\r\n          results.splice(roll, 1, total);\r\n        }\r\n      }\r\n      i++;\r\n    } else {\r\n      i++;\r\n      return 0;\r\n    }\r\n  }, []);\r\n  func(results);\r\n  return func(results);\r\n};\r\n\r\nexport default ResultSetter;\r\n","import { React, useState } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DICE_MATRIX, DICE_NAMES } from \"./Components/Constants.js\";\nimport OutcomeTally from \"./Components/Outcome.js\";\nimport AmountSetter from \"./Components/AmountSetter.js\";\nimport ResultSetter from \"./Components/ResultSetter\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"100px 640px 100px 640px\",\n    padding: \"0px 20px 0px 20px\"\n  }\n});\n\nexport const App = () => {\n  const [rollAmount, setRollAmount] = useState([0, 0, 0, 0, 0, 0]);\n  const [result, setResult] = useState();\n  const classes = useStyles();\n\n  const handleChange = event => {\n    AmountSetter(\n      event.currentTarget.id,\n      event.currentTarget.value,\n      rollAmount,\n      setRollAmount\n    );\n  };\n\n  const handleRoll = event => {\n    ResultSetter(rollAmount, setResult);\n  };\n\n  return (\n    <CssBaseline>\n      <Paper elevation={6} classes={{ root: classes.root }}>\n        <Grid\n          container\n          direction=\"row\"\n          spacing={3}\n          alignItems=\"center\"\n          justifyContent=\"flex-start\"\n        >\n          <Grid item direciton=\"column\">\n            {DICE_MATRIX.map(x => {\n              return (\n                <Grid item>\n                  <Typography\n                    variant=\"h5\"\n                    className={DICE_NAMES[DICE_MATRIX.indexOf(x)]}\n                  >\n                    {DICE_NAMES[DICE_MATRIX.indexOf(x)]}\n                  </Typography>\n                  <ButtonGroup size=\"large\" variant=\"contained\" color=\"primary\">\n                    <Button\n                      value={-1}\n                      id={DICE_MATRIX.indexOf(x)}\n                      onClick={handleChange}\n                    >\n                      -\n                    </Button>\n                    <Button disabled variant=\"outlined\">\n                      <Typography color=\"textPrimary\">\n                        {rollAmount[DICE_MATRIX.indexOf(x)]}\n                      </Typography>\n                    </Button>\n                    <Button\n                      value={1}\n                      id={DICE_MATRIX.indexOf(x)}\n                      onClick={handleChange}\n                    >\n                      +\n                    </Button>\n                  </ButtonGroup>\n                </Grid>\n              );\n            })}\n            <Grid item>\n              <Button\n                size=\"large\"\n                color=\"secondary\"\n                variant=\"outlined\"\n                onClick={handleRoll}\n              >\n                Roll\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            spacing={4}\n            alignItems=\"center\"\n            justifyContent=\"space-evenly\"\n            direction=\"row\"\n            lg={9}\n            xs={9}\n            sm={9}\n          >\n            {result ? OutcomeTally(result) : \"\"}\n          </Grid>\n        </Grid>\n      </Paper>\n    </CssBaseline>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}