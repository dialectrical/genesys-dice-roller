{"version":3,"sources":["Components/Styles/StyledPaper.js","Components/Constants.js","Components/Styles/StyledOutcomeGrid.js","Components/Styles/StyledOutcomeCard.js","Components/Styles/StyledOutcomeTypography.js","Components/Outcome.js","Components/ResultSetter.js","Components/AmountButtons.js","Components/RollLog.js","Components/Styles/StyledLogCard.js","Components/LogInterpreter.js","App.js","reportWebVitals.js","index.js"],"names":["StyledPaper","styled","Paper","DICE_MATRIX","DICE_NAMES","RESULT_NAMES","StyledOutcomeGrid","Grid","StyledOutcomeCard","Card","StyledOutcomeTypography","Typography","OutcomeTally","arr","i","v","arr1","slice","arr2","map","x","item","xs","lg","raised","CardContent","color","align","Math","abs","Roller","amount","func","setLog","setRolled","results","rollLog","Button","size","variant","onClick","event","l","roll","floor","random","length","push","splice","AmountButtons","handleChange","newAmount","currentTarget","value","id","className","indexOf","ButtonGroup","disabled","RollLog","log","displayLog","StyledLogCard","useStyles","makeStyles","container","height","LogInterpreter","classes","baseLog","logContents","y","TableRow","TableCell","TableContainer","components","Table","stickyHeader","TableHead","App","useState","rollAmount","setRollAmount","rolledAmount","setRolledAmount","result","setResult","setRollLog","elevation","direction","spacing","alignItems","alignContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.746bfcad.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nexport const StyledPaper = styled(Paper)`\r\n  margin: 5% 30% 10% 30%;\r\n  padding: 0px 20px 0px 20px;\r\n  @media (max-width: 960px) {\r\n    text-align: left;\r\n    margin-left: 0vw;\r\n    margin-right: 0vw;\r\n    margin-top: 25vw;\r\n  }\r\n`;\r\n","export const DICE_MATRIX = [\r\n  [12, 12, 0, 6, 7, 1], //Boost die (d6)\r\n  [12, 12, 3, 3, 4, 4], //Setback die (d6)\r\n  [12, 0, 0, 8, 1, 1, 6, 7], //Ability die (d8)\r\n  [12, 3, 9, 4, 4, 4, 10, 11], //Difficulty die (d8)\r\n  [12, 0, 0, 8, 8, 1, 6, 6, 6, 7, 7, 2], //Proficiency die (d12)\r\n  [12, 3, 3, 9, 9, 4, 4, 11, 11, 10, 10, 5] //Challenge die (d12)\r\n];\r\nexport const DICE_NAMES = [\r\n  \"Boost\",\r\n  \"Setback\",\r\n  \"Ability\",\r\n  \"Difficulty\",\r\n  \"Proficiency\",\r\n  \"Challenge\"\r\n];\r\n\r\nexport const RESULT_NAMES = [\r\n  \"Success\",\r\n  \"Advantage\",\r\n  \"Triumph\",\r\n  \"Failure\",\r\n  \"Threat\",\r\n  \"Despair\",\r\n  \"Success and Advantage\",\r\n  \"Advantage and Advantage\",\r\n  \"Success and Success\",\r\n  \"Failure and Failure\",\r\n  \"Threat and Threat\",\r\n  \"Threat and Failure\",\r\n  \"Blank\"\r\n];\r\n\r\nexport default { DICE_MATRIX, DICE_NAMES, RESULT_NAMES };\r\n","import styled from \"styled-components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport const StyledOutcomeGrid = styled(Grid)`\r\n  @media (max-width: 960px) {\r\n    width: \"33%\";\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nexport const StyledOutcomeCard = styled(Card)`\r\n  height: \"100%\";\r\n  @media (max-width: 960px) {\r\n    padding: 0%;\r\n    text-align: left;\r\n    margin-left: 30%;\r\n    width: 100%;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const StyledOutcomeTypography = styled(Typography)`\r\n  @media (max-width: 960px) {\r\n    font-size: x-small;\r\n    text-align: left;\r\n  }\r\n`;\r\n","import { RESULT_NAMES } from \"./Constants.js\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { StyledOutcomeGrid } from \"./Styles/StyledOutcomeGrid\";\r\nimport { StyledOutcomeCard } from \"./Styles/StyledOutcomeCard\";\r\nimport { StyledOutcomeTypography } from \"./Styles/StyledOutcomeTypography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const OutcomeTally = arr => {\r\n  let i = -1;\r\n  let v = -1;\r\n  let arr1 = arr.slice(0, 3);\r\n  let arr2 = arr.slice(3);\r\n  let tally = arr1.map(x => {\r\n    i++;\r\n    return x - arr2[i];\r\n  });\r\n  let display = tally.map(x => {\r\n    if (x >= 0) {\r\n      v++;\r\n      return (\r\n        <StyledOutcomeGrid item xs={5} lg={4}>\r\n          <StyledOutcomeCard raised>\r\n            <CardContent>\r\n              <StyledOutcomeTypography color=\"textPrimary\" align=\"center\">\r\n                {RESULT_NAMES[v]}\r\n              </StyledOutcomeTypography>\r\n              <StyledOutcomeTypography align=\"center\">\r\n                {x}\r\n              </StyledOutcomeTypography>\r\n            </CardContent>\r\n          </StyledOutcomeCard>\r\n        </StyledOutcomeGrid>\r\n      );\r\n    } else if (x < 0) {\r\n      v++;\r\n      return (\r\n        <StyledOutcomeGrid item xs={5} lg={4}>\r\n          <StyledOutcomeCard raised>\r\n            <CardContent>\r\n              <StyledOutcomeTypography color=\"textPrimary\" align=\"center\">\r\n                {RESULT_NAMES[v + 3]}\r\n              </StyledOutcomeTypography>\r\n              <StyledOutcomeTypography align=\"center\">\r\n                {Math.abs(x)}\r\n              </StyledOutcomeTypography>\r\n            </CardContent>\r\n          </StyledOutcomeCard>\r\n        </StyledOutcomeGrid>\r\n      );\r\n    }\r\n  });\r\n  return display;\r\n};\r\n\r\nexport default OutcomeTally;\r\n","import React from \"react\";\r\nimport { DICE_MATRIX } from \"./Constants.js\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const Roller = (amount, func, setLog, setRolled) => {\r\n  let i = 0;\r\n  let results = [0, 0, 0, 0, 0, 0];\r\n  let rollLog = [];\r\n  const handleRoll = event => {\r\n    amount.map(x => {\r\n      if (x > 0) {\r\n        for (let l = 0; l < x; l++) {\r\n          let roll =\r\n            DICE_MATRIX[i][Math.floor(Math.random() * DICE_MATRIX[i].length)];\r\n          rollLog.push(roll);\r\n          if (roll == 12) {\r\n            //blank rolled, do nothing\r\n          } else if (roll == 6) {\r\n            results.splice(0, 1, results[0] + 1);\r\n            results.splice(1, 1, results[1] + 1);\r\n          } else if (roll == 7) {\r\n            results.splice(1, 1, results[1] + 2);\r\n          } else if (roll == 8) {\r\n            results.splice(0, 1, results[0] + 2);\r\n          } else if (roll == 9) {\r\n            results.splice(3, 1, results[3] + 2);\r\n          } else if (roll == 10) {\r\n            results.splice(4, 1, results[4] + 2);\r\n          } else if (roll == 11) {\r\n            results.splice(4, 1, results[4] + 1);\r\n            results.splice(5, 1, results[5] + 1);\r\n          } else {\r\n            results.splice(roll, 1, results[roll] + 1);\r\n          }\r\n          setLog(rollLog);\r\n        }\r\n        i++;\r\n      } else {\r\n        i++;\r\n        return 0;\r\n      }\r\n    }, []);\r\n    setRolled(amount);\r\n    return func(results);\r\n  };\r\n  return (\r\n    <Button\r\n      size=\"large\"\r\n      color=\"secondary\"\r\n      variant=\"outlined\"\r\n      onClick={handleRoll}\r\n    >\r\n      Roll\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Roller;\r\n","import React from \"react\";\r\nimport { DICE_MATRIX, DICE_NAMES } from \"./Constants\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const AmountButtons = (arr, func) => {\r\n  const handleChange = event => {\r\n    let newAmount = [...arr];\r\n    if (\r\n      event.currentTarget.value == 1 &&\r\n      newAmount[event.currentTarget.id] < 5\r\n    ) {\r\n      newAmount.splice(\r\n        event.currentTarget.id,\r\n        1,\r\n        newAmount[event.currentTarget.id] + 1\r\n      );\r\n      return func(newAmount);\r\n    } else if (\r\n      event.currentTarget.value == -1 &&\r\n      newAmount[event.currentTarget.id] > 0\r\n    ) {\r\n      newAmount.splice(\r\n        event.currentTarget.id,\r\n        1,\r\n        newAmount[event.currentTarget.id] - 1\r\n      );\r\n      return func(newAmount);\r\n    }\r\n  };\r\n\r\n  return DICE_MATRIX.map(x => {\r\n    return (\r\n      <>\r\n        <Typography variant=\"h5\" className={DICE_NAMES[DICE_MATRIX.indexOf(x)]}>\r\n          {DICE_NAMES[DICE_MATRIX.indexOf(x)]}\r\n        </Typography>\r\n        <ButtonGroup size=\"small\" variant=\"contained\" color=\"primary\">\r\n          <Button value={-1} id={DICE_MATRIX.indexOf(x)} onClick={handleChange}>\r\n            -\r\n          </Button>\r\n          <Button disabled variant=\"outlined\">\r\n            <Typography color=\"textPrimary\">\r\n              {arr[DICE_MATRIX.indexOf(x)]}\r\n            </Typography>\r\n          </Button>\r\n          <Button value={1} id={DICE_MATRIX.indexOf(x)} onClick={handleChange}>\r\n            +\r\n          </Button>\r\n        </ButtonGroup>\r\n      </>\r\n    );\r\n  });\r\n};\r\n\r\nexport default AmountButtons;\r\n","import React from \"react\";\r\nimport { DICE_NAMES, RESULT_NAMES } from \"./Constants\";\r\n\r\nexport const RollLog = (amount, log) => {\r\n  let i = -1;\r\n  let displayLog = [[], [], [], [], [], []];\r\n  amount.map(x => {\r\n    i++;\r\n    for (let l = 0; l < x; l++) {\r\n      displayLog[i].push(log[l]);\r\n    }\r\n  });\r\n  return displayLog;\r\n};\r\n\r\nexport default RollLog;\r\n","import styled from \"styled-components\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nexport const StyledLogCard = styled(Card)`\r\n  height: \"100%\";\r\n  width: 98.3%;\r\n  @media (max-width: 960px) {\r\n    height: 58vw;\r\n    text-align: left;\r\n    width: 100%;\r\n    margin-left: 10%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport RollLog from \"./RollLog\";\r\nimport { DICE_NAMES, RESULT_NAMES } from \"./Constants\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { StyledLogCard } from \"./Styles/StyledLogCard\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    height: 300\r\n  }\r\n});\r\n\r\nexport const LogInterpreter = (amount, log) => {\r\n  const classes = useStyles();\r\n  if (amount) {\r\n    let baseLog = RollLog(amount, log);\r\n    let logContents = baseLog.map(x => {\r\n      if (baseLog[baseLog.indexOf(x)]) {\r\n        return baseLog[baseLog.indexOf(x)].map(y => {\r\n          return (\r\n            <TableRow>\r\n              <TableCell>{DICE_NAMES[baseLog.indexOf(x)]}</TableCell>\r\n              <TableCell align=\"right\">{RESULT_NAMES[y]}</TableCell>\r\n            </TableRow>\r\n          );\r\n        });\r\n      }\r\n    });\r\n    return (\r\n      <StyledLogCard raised>\r\n        <CardContent>\r\n          <TableContainer components={Paper} className={classes.container}>\r\n            <Table stickyHeader size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Dice</TableCell>\r\n                  <TableCell align=\"right\">Results</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              {logContents}\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n      </StyledLogCard>\r\n    );\r\n  }\r\n};\r\n\r\nexport default LogInterpreter;\r\n","import { React, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { StyledPaper } from \"./Components/Styles/StyledPaper\";\r\nimport OutcomeTally from \"./Components/Outcome\";\r\nimport Roller from \"./Components/ResultSetter\";\r\nimport AmountButtons from \"./Components/AmountButtons\";\r\nimport LogInterpreter from \"./Components/LogInterpreter\";\r\n\r\nexport const App = () => {\r\n  const [rollAmount, setRollAmount] = useState([0, 0, 0, 0, 0, 0]);\r\n  const [rolledAmount, setRolledAmount] = useState();\r\n  const [result, setResult] = useState([0, 0, 0, 0, 0, 0]);\r\n  const [rollLog, setRollLog] = useState();\r\n\r\n  return (\r\n    <StyledPaper elevation={6}>\r\n      <Grid container direction=\"row\" spacing={3} alignItems=\"flex-start\">\r\n        <Grid container item xs={4} lg={4} direction=\"column\" spacing={1}>\r\n          <Grid item>{AmountButtons(rollAmount, setRollAmount)}</Grid>\r\n          <Grid item>\r\n            {Roller(rollAmount, setResult, setRollLog, setRolledAmount)}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={8}\r\n          lg={8}\r\n          spacing={1}\r\n          alignContent=\"space-around\"\r\n        >\r\n          <Grid item container xs={12} lg={12} spacing={1}>\r\n            {OutcomeTally(result)}\r\n          </Grid>\r\n          <Grid item xs={12} lg={12}>\r\n            {LogInterpreter(rolledAmount, rollLog)}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </StyledPaper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}